{
  "Comment": "State machine to process Twitch authentication callback",
  "StartAt": "Iterate Messages",
  "States": {
    "Iterate Messages": {
      "Type": "Map",
      "MaxConcurrency": 10,
      "Iterator": {
        "StartAt": "Parse Message Body",
        "States": {
          "Parse Message Body": {
            "Type": "Pass",
            "Parameters": {
              "params.$": "States.StringToJson($.body)"
            },
            "Next": "Get Auth State"
          },
          "Get Auth State": {
            "Type": "Task",
            "Resource": "arn:aws:states:::dynamodb:getItem",
            "Parameters": {
              "TableName": "${dynamodb_table_auth_states_name}",
              "Key": {
                "state": {
                  "S.$": "$.params.state"
                }
              }
            },
            "Next": "Clean Data",
            "ResultPath": "$.state_item"
          },
          "Clean Data": {
            "Type": "Pass",
            "Next": "Auth State Exist ?",
            "Parameters": {
              "params.$": "$.params",
              "state_item.$": "$.state_item.Item"
            }
          },
          "Auth State Exist ?": {
            "Type": "Choice",
            "Choices": [
              {
                "Variable": "$.state_item",
                "IsPresent": false,
                "Next": "Auth State Error"
              }
            ],
            "Default": "Delete Auth State"
          },
          "Delete Auth State": {
            "Type": "Task",
            "Resource": "arn:aws:states:::dynamodb:deleteItem",
            "Parameters": {
              "TableName": "${dynamodb_table_auth_states_name}",
              "Key": {
                "state": {
                  "S.$": "$.params.state"
                }
              }
            },
            "ResultPath": null,
            "Next": "Twitch Callback"
          },
          "Twitch Callback": {
            "Type": "Task",
            "Resource": "arn:aws:states:::lambda:invoke",
            "OutputPath": "$.Payload",
            "Parameters": {
              "Payload.$": "$",
              "FunctionName": "${lambda_twitch_callback_arn}"
            },
            "Retry": [
              {
                "ErrorEquals": [
                  "TokenExchangeError",
                  "UserFetchError",
                  "DynamoDBError",
                  "Lambda.ServiceException",
                  "Lambda.AWSLambdaException",
                  "Lambda.SdkClientException",
                  "Lambda.TooManyRequestsException"
                ],
                "IntervalSeconds": 1,
                "MaxAttempts": 3,
                "BackoffRate": 2
              }
            ],
            "Catch": [
              {
                "ErrorEquals": ["InvalidStateError", "ExpiredStateError"],
                "Next": "Auth State Error"
              },
              {
                "ErrorEquals": ["States.ALL"],
                "Next": "Lambda Error"
              }
            ],
            "Next": "Update The User"
          },
          "Update The User": {
            "Type": "Task",
            "Resource": "arn:aws:states:::sqs:sendMessage",
            "Parameters": {
              "MessageBody.$": "$",
              "QueueUrl": "${sqs_update_user_url}"
            },
            "End": true
          },
          "Auth State Error": {
            "Type": "Fail",
            "Error": "Missing, Invalid or Expired Auth State",
            "Cause": "The provided auth state is missing, invalid or has expired."
          },
          "Lambda Error": {
            "Type": "Fail",
            "Error": "LambdaError",
            "Cause": "An unhandled error occurred during processing."
          }
        }
      },
      "End": true
    }
  }
}